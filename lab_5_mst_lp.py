from scipy.optimize import linprog

# количество ребер
E = 13

# количество ребер в min. span tree
MST_E = 7

# целевая функция
obj = [7, 4, 3, 1, 7, 4, 5, 3, 4, 1, 3, 5, 2]

# левая часть неравенств
lhs_ineq = [
    [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0],
    [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1],
    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1],
]
# правая часть неравенств
rhs_ineq = [1] * len(lhs_ineq)

# домножаем обе части неравенств на -1, чтобы привести задачу к каноническому виду
lhs_ineq = [[-a for a in row] for row in lhs_ineq]
rhs_ineq = [-a for a in rhs_ineq]

# правая часть уравнений
lhs_eq = [[1] * E]
# левая часть уравнений
rhs_eq = [MST_E]

# диапазон значений x_i
bnd = [(0, 1)] * E

opt = linprog(c=obj, A_ub=lhs_ineq, b_ub=rhs_ineq,
              A_eq=lhs_eq, b_eq=rhs_eq, bounds=bnd,
              method="revised simplex")

print(f"Ответ: {opt.x}")
